/* A slightly wider game container */

/* (A) Dark background and modern font */
html, body {
    margin: 0;
    padding: 0;
    background-color: #121212;
    color: #ffffff;
    font-family: 'Poppins', sans-serif; /* or 'Roboto', sans-serif */
  }

.game-container {
    max-width: 800px; /* was 600px before */
    margin: 40px auto;
    padding: 20px;
    text-align: center;
    background-color: #1e1e1e;
    border-radius: 8px;
    box-shadow: 0 4px 10px rgba(0,0,0,0.6);
  }
  
  /* Title styling (optional) */
  .game-container h1 {
    margin-bottom: 20px;
  }
  
  /* (B) Guess History with fixed rows */
#guess-history {
  width: 80%;
  margin: 0 auto 20px auto;
  /* This ensures each row is a set height so layout doesn't jump */
}
.attempt-row {
  margin: 4px 0;
  padding: 6px 8px;
  background: #2a2a2a;
  border-radius: 4px;
  text-align: left; /* so text is left-aligned inside the row */
}
  
  /* Progress bar container remains the same (centered) */
  #progress-wrapper {
    margin: 0 auto 30px auto; /* add bottom margin so there's space below it */
    width: 100%;
    max-width: 600px; /* make it narrower or same as container if you like */
  }
  
  /* Keep these from your existing code */
  #progress-container {
    position: relative;
    width: 100%;
    height: 20px;
    background: #3a3a3a;
    border-radius: 4px;
    overflow: hidden;
  }
  #unlocked-bar {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 0%;
    background: #cadace;
    z-index: 1;
  }
  #current-bar {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 0%;
    background: #1DB954;
    z-index: 2;
  }
  #markers-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 3;
  }
  .slice-marker {
    position: absolute;
    top: 0;
    width: 2px;
    height: 100%;
    background: rgba(255,255,255,0.7);
  }
  
  /* The Play button container */
  .play-container {
    margin-bottom: 20px;
  }
  
  /* Reuse your big green button for the play button */
  .big-play-btn {
    background-color: #1DB954;
    border: none;
    border-radius: 50%;
    width: 60px;
    height: 60px;
    font-size: 1.5rem;
    color: #fff;
    cursor: pointer;
    outline: none;
    transition: transform 0.1s ease;
  }
  .big-play-btn:hover {
    background-color: #1ed760;
  }
  .big-play-btn:active {
    transform: scale(0.95);
  }
  
  /* 
     (E) The guess form:
     We want the input centered, 
     then skip on the left, guess on the right 
  */
/* The guess form is already display: flex & column in your code,
   so we only add position: relative */
   .guess-form {
    position: relative; 
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-bottom: 20px;
  }
  
  /* The guess input was given width: 60%; 
     so let's match that for the autocomplete. */
  #guess-input {
    width: 60%;
    padding: 8px;
    margin-bottom: 0; /* We'll control spacing via autocomplete container */
    font-size: 1rem;
    border-radius: 4px;
    border: 1px solid #444;
    background: #2a2a2a;
    color: #fff;
  }
  
  /* The container for autocomplete suggestions */
  .autocomplete-items {
    position: absolute;
    top: 48px; /* or however far below the input you want. 
                  Could also do '100%' if your .guess-form 
                  height fits that approach */
    left: 20%; /* Because #guess-input is 60% wide & centered, 
                  you might do left: 20% to line up exactly. 
                  Or you can do left: 50% transform: translateX(-50%) etc. 
                  Or if the input is not exactly centered, you can do left: 0 */
    width: 60%; /* match the input width exactly */
    
    background: #2a2a2a;
    border: 1px solid #444;
    border-radius: 4px;
    box-shadow: 0 2px 5px rgba(0,0,0,0.5);
    z-index: 999;
    max-height: 200px; /* optional: limit height so it won't overflow the screen */
    overflow-y: auto;  /* scroll if there are many suggestions */
  }
  
  /* Each suggestion row */
  .autocomplete-items div {
    padding: 8px 12px;
    cursor: pointer;
    color: #fff;         /* match your theme text color */
    font-size: 0.95rem;  /* slightly smaller than the input if you like */
  }
  
  /* Hover effect for each suggestion */
  .autocomplete-items div:hover {
    background-color: #3a3a3a;
  }
  
  /* If you want a small gap between the input and the suggestions, 
     you can do something like: */
  #autocomplete-list {
    position: absolute;
    top: calc(100% + 4px); /* a small gap below the input */
    left: 0;
    width: 100%;
    margin-top: 4px;
    background-color: #121212;
  }
  
  .action-buttons {
    display: flex;
    width: 60%; /* match input width if you like */
    justify-content: space-between; /* skip on left, guess on right */
  }
  
  /* Skip button on the left, guess on the right */
  .skip-btn, .guess-btn {
    padding: 10px 20px;
    font-size: 1rem;
    cursor: pointer;
    border-radius: 4px;
    border: none;
  }
  .skip-btn {
    background: #444; /* dark gray */
    color: #fff;
  }
  .skip-btn:hover {
    background: #555;
  }
  .guess-btn {
    background: #1DB954; /* green */
    color: #fff;
  }
  .guess-btn:hover {
    background: #1ed760;
  }
  
  /* Feedback area stays the same */
  #feedback {
    font-weight: bold;
    margin: 10px 0;
    min-height: 1.5em;
  }
  #guess-history {
    margin-bottom: 20px;
    min-height: 30px; 
    color: #ccc;        /* or #fff if you like */
    font-weight: bold;
  }
  #guess-history p {
    margin: 5px 0;
  }
  
  /* style.css, something simple for your autocomplete box */
.autocomplete-items {
    position: absolute;
    border: 1px solid #ccc;
    background: #fff;
    z-index: 99;
    width: 200px; /* match input width or do something else */
  }
  
  .autocomplete-items div {
    padding: 8px;
    cursor: pointer;
  }
  
  .autocomplete-items div:hover {
    background-color: #e9e9e9;
  }
  